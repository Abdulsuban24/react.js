usestate
import React, { useState } from "react";

function Counter() {
  // Declare a state variable called "count" with initial value 0
  const [count, setCount] = useState(0);

  return (
    <div>
      <h2>Count: {count}</h2>
      {/* When the button is clicked, increase count by 1 */}
      <button onClick={() => setCount(count + 1)}>Increase</button>
    </div>
  );
}

export default Counter;

2.useEffect
import React, { useState, useEffect } from "react";

function Counter() {
  const [count, setCount] = useState(0);

  // useEffect runs after every render
  useEffect(() => {
    console.log("The count is:", count);
  });

  return (
    <div>
      <h2>Count: {count}</h2>
      <button onClick={() => setCount(count + 1)}>Increase</button>
    </div>
  );
}

export default Counter;

useref
import React, { useState, useRef, useEffect } from "react";

function RenderCountExample() {
  const [name, setName] = useState("");
  const renderCount = useRef(1); // Step 1️⃣ — Create a ref (initial value = 1)

  // Step 2️⃣ — Each time component re-renders, increase count
  useEffect(() => {
    renderCount.current = renderCount.current + 1;
  });

  return (
    <div style={{ textAlign: "center", marginTop: "50px" }}>
      <h2>🔁 useRef Example — Render Counter</h2>
      <input
        value={name}
        onChange={(e) => setName(e.target.value)}
        placeholder="Type something..."
        style={{ padding: "10px", fontSize: "16px" }}
      />
      <h3>👀 Name: {name}</h3>
      <h3>Component Rendered: {renderCount.current} times</h3>
    </div>
  );
}

export default RenderCountExample;

